// <auto-generated />
using System;
using EST.MIT.Approvals.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EST.MIT.Approvals.Data.Migrations
{
    [DbContext(typeof(ApprovalsContext))]
    [Migration("20230611191052_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EST.MIT.Approvals.Data.Models.ApproverEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_by_user_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email_address");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by_user_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_on");

                    b.HasKey("Id")
                        .HasName("pk_approvers");

                    b.ToTable("approvers", (string)null);
                });

            modelBuilder.Entity("EST.MIT.Approvals.Data.Models.GradeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_by_user_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by_user_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_grades");

                    b.ToTable("grades", (string)null);
                });

            modelBuilder.Entity("EST.MIT.Approvals.Data.Models.SchemeApprovalGradeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ApprovalLimit")
                        .HasColumnType("numeric")
                        .HasColumnName("approval_limit");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_by_user_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsUnlimited")
                        .HasColumnType("boolean")
                        .HasColumnName("is_unlimited");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by_user_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_on");

                    b.Property<int>("SchemeGradeId")
                        .HasColumnType("integer")
                        .HasColumnName("scheme_grade_id");

                    b.HasKey("Id")
                        .HasName("pk_scheme_approval_grades");

                    b.HasIndex("SchemeGradeId")
                        .HasDatabaseName("ix_scheme_approval_grades_scheme_grade_id");

                    b.ToTable("scheme_approval_grades", (string)null);
                });

            modelBuilder.Entity("EST.MIT.Approvals.Data.Models.SchemeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_by_user_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by_user_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_schemes");

                    b.ToTable("schemes", (string)null);
                });

            modelBuilder.Entity("EST.MIT.Approvals.Data.Models.SchemeGradeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApproverEntityId")
                        .HasColumnType("integer")
                        .HasColumnName("approver_entity_id");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("created_by_user_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<int>("GradeId")
                        .HasColumnType("integer")
                        .HasColumnName("grade_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by_user_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_on");

                    b.Property<int>("SchemeId")
                        .HasColumnType("integer")
                        .HasColumnName("scheme_id");

                    b.HasKey("Id")
                        .HasName("pk_scheme_grades");

                    b.HasIndex("ApproverEntityId")
                        .HasDatabaseName("ix_scheme_grades_approver_entity_id");

                    b.HasIndex("GradeId")
                        .HasDatabaseName("ix_scheme_grades_grade_id");

                    b.HasIndex("SchemeId")
                        .HasDatabaseName("ix_scheme_grades_scheme_id");

                    b.ToTable("scheme_grades", (string)null);
                });

            modelBuilder.Entity("EST.MIT.Approvals.Data.Models.SchemeApprovalGradeEntity", b =>
                {
                    b.HasOne("EST.MIT.Approvals.Data.Models.SchemeGradeEntity", "SchemeGrade")
                        .WithMany()
                        .HasForeignKey("SchemeGradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_scheme_approval_grades_scheme_grades_scheme_grade_id");

                    b.Navigation("SchemeGrade");
                });

            modelBuilder.Entity("EST.MIT.Approvals.Data.Models.SchemeGradeEntity", b =>
                {
                    b.HasOne("EST.MIT.Approvals.Data.Models.ApproverEntity", null)
                        .WithMany("SchemeGrades")
                        .HasForeignKey("ApproverEntityId")
                        .HasConstraintName("fk_scheme_grades_approvers_approver_entity_id");

                    b.HasOne("EST.MIT.Approvals.Data.Models.GradeEntity", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_scheme_grades_grades_grade_id");

                    b.HasOne("EST.MIT.Approvals.Data.Models.SchemeEntity", "Scheme")
                        .WithMany()
                        .HasForeignKey("SchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_scheme_grades_schemes_scheme_id");

                    b.Navigation("Grade");

                    b.Navigation("Scheme");
                });

            modelBuilder.Entity("EST.MIT.Approvals.Data.Models.ApproverEntity", b =>
                {
                    b.Navigation("SchemeGrades");
                });
#pragma warning restore 612, 618
        }
    }
}
